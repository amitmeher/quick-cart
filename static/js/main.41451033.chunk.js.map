{"version":3,"sources":["Styles/Theme.js","Util/NotificationProvider/index.js","Store/data/users.js","Main/Auth/Components/SignUp.js","Main/Auth/index.js","Main/Auth/Components/Login.js","Styles/Styles.js","Main/Questions/Components/Question.js","Store/data/JavaScriptQuestions.js","Main/Questions/Components/Details.js","Main/Timer/Timer.js","Main/Questions/Components/JavaScript/index.js","Main/Questions/Components/JavaScript/JavaScript.js","Application.js","App.js","serviceWorker.js","index.js"],"names":["Theme","createMuiTheme","question","primary","contsartText","emitter","EventEmitter","Snackbar","children","useSnackbar","enqueueSnackbar","closeSnackbar","on","message","variant","Notify","emit","NotificationProvider","anchorOrigin","horizontal","vertical","preventDuplicate","autoHideDuration","users","id","username","password","withStyles","theme","margin","spacing","unit","padding","props","classes","open","handleClose","useState","formData","setFormData","errors","setErrors","handleChange","event","name","target","value","trimStart","prevFormData","newFormData","error","validateError","prevErrors","checkAuthorization","user","find","Dialog","onClose","Paper","className","Grid","container","alignItems","item","Face","md","sm","xs","TextField","label","type","fullWidth","autoFocus","required","onChange","helperText","Fingerprint","justify","style","marginTop","Button","color","textTransform","onClick","isEmpty","Login","setUserLogged","status","setStatus","useEffect","console","log","minHeight","isSignUp","Styles","fullOuter","boxSizing","width","height","display","overflowX","drawerViewBody","top","styles","React","createRef","key","draggable","onDragStart","dataTransfer","setData","handleDrag","Typography","varient","component","gutterBottom","wordBreak","que","JavaScriptQuestions","options","a","b","c","d","details","ans","droppedData","setDroppedData","onDragOver","preventDefault","onDrop","getData","handleDrop","overflow","Timer","seconds","setSeconds","isActive","setIsActive","interval","setInterval","clearInterval","JavaScript","useFetch","headers","isLoading","data","direction","float","lg","map","Application","userLogged","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","basename","process","DndProvider","backend","HTML5Backend","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.41451033.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst Theme = createMuiTheme({\r\n    question: {\r\n        primary: {\r\n            contsartText: '#ffffff'\r\n        }\r\n    }\r\n});\r\n\r\nexport default Theme;","import React from 'react';\r\nimport { SnackbarProvider, useSnackbar } from 'notistack';\r\nimport Button from '@material-ui/core/Button';\r\nimport EventEmitter from 'event-emitter';\r\n\r\nconst emitter = new EventEmitter();\r\n\r\nconst Snackbar = ({ children }) => {\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n    const action = key => (\r\n        <>\r\n            <Button onClick={() => { alert(`I belong to snackbar with key ${key}`); }}>\r\n                'Alert'\r\n            </Button>\r\n            <Button onClick={() => { closeSnackbar(key) }}>\r\n                'Dismiss'\r\n            </Button>\r\n        </>\r\n    );\r\n\r\n    emitter.on('notify', (message, variant) => {\r\n        enqueueSnackbar(message, {\r\n            variant,\r\n            // action\r\n        });\r\n    });\r\n\r\n    return <>{children}</>\r\n}\r\n\r\nexport const Notify = (message, variant) => {\r\n    emitter.emit('notify', message, variant);\r\n}\r\n\r\nconst NotificationProvider = ({ children }) =>\r\n    <SnackbarProvider\r\n        anchorOrigin={{ horizontal: \"right\", vertical: \"bottom\" }}\r\n        preventDuplicate={true}\r\n        autoHideDuration={1500}>\r\n        <Snackbar>{children}</Snackbar>\r\n    </SnackbarProvider>\r\n\r\nexport default NotificationProvider;\r\n\r\n","const users = [\r\n    {\r\n        id: 1,\r\n        username: 'admin',\r\n        password: 'admin'\r\n    },\r\n    {\r\n        id: 2,\r\n        username: 'amit',\r\n        password: 'amit'\r\n    }\r\n];\r\n\r\nexport default users; ","import React, { useState } from 'react';\r\nimport trimStart from 'lodash/trimStart';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport { Dialog, Paper, withStyles, Grid, TextField, Button, FormControlLabel, Checkbox } from '@material-ui/core';\r\nimport { Face, Fingerprint } from '@material-ui/icons';\r\nimport { Notify } from '../../../Util/NotificationProvider';\r\nimport users from '../../../Store/data/users';\r\n\r\nconst styles = theme => ({\r\n    margin: {\r\n        margin: theme.spacing.unit * 2,\r\n    },\r\n    padding: {\r\n        padding: theme.spacing.unit\r\n    }\r\n});\r\n\r\nconst SignUp = props => {\r\n    const { classes, open, handleClose } = props;\r\n    const [formData, setFormData] = useState({});\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const handleChange = event => {\r\n        const { name } = event.target;\r\n        let value = trimStart(event.target.value);\r\n        setFormData(prevFormData => {\r\n            const newFormData = { ...prevFormData, [name]: value };\r\n            const error = validateError(newFormData);\r\n            setErrors(prevErrors => ({ ...prevErrors, [name]: error[name] }));\r\n            return newFormData;\r\n        });\r\n    }\r\n\r\n    const handleLogin = () => {\r\n        setFormData(prevFormData => {\r\n            const errors = validateError(prevFormData);\r\n            if (isEmpty(errors)) {\r\n                const isAuthorized = checkAuthorization(prevFormData);\r\n                if (isAuthorized) Notify('isAuthorized', 'success');\r\n                else Notify('isNotAuthorized', 'error');\r\n            }\r\n            else setErrors(errors);\r\n\r\n            return prevFormData;\r\n        })\r\n    }\r\n\r\n    const validateError = ({ username, password }) => {\r\n        const errors = {};\r\n        if (!username) errors.username = 'Please specify Username';\r\n        if (!password) errors.password = 'Please specify Password';\r\n        return errors;\r\n    }\r\n\r\n    const checkAuthorization = ({ username, password }) => {\r\n        const user = users.find(user => user.username === username);\r\n        return user?.password === password;\r\n    }\r\n\r\n    return (\r\n        <Dialog open={open} onClose={handleClose}>\r\n            <Paper className={classes.padding}>\r\n                <div className={classes.margin}>\r\n                    <Grid container spacing={4} alignItems=\"flex-end\">\r\n                        <Grid item>\r\n                            <Face />\r\n                        </Grid>\r\n                        <Grid item md={true} sm={true} xs={true}>\r\n                            <TextField\r\n                                name=\"username\"\r\n                                label=\"Username\"\r\n                                type=\"text\"\r\n                                fullWidth\r\n                                autoFocus\r\n                                required\r\n                                value={formData.username || \"\"}\r\n                                onChange={handleChange}\r\n                                error={!!errors.username}\r\n                                helperText={errors.username}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={4} alignItems=\"flex-end\">\r\n                        <Grid item>\r\n                            <Fingerprint />\r\n                        </Grid>\r\n                        <Grid item md={true} sm={true} xs={true}>\r\n                            <TextField\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                fullWidth\r\n                                required\r\n                                value={formData.password || \"\"}\r\n                                onChange={handleChange}\r\n                                error={!!errors.password}\r\n                                helperText={errors.password}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    {/* <Grid container alignItems=\"center\" justify=\"space-between\">\r\n                            <Grid item>\r\n                                <FormControlLabel control={\r\n                                    <Checkbox\r\n                                        color=\"primary\"\r\n                                    />\r\n                                } label=\"Remember me\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button disableFocusRipple disableRipple style={{ textTransform: \"none\" }} variant=\"text\" color=\"primary\">Forgot password ?</Button>\r\n                            </Grid>\r\n                        </Grid> */}\r\n                    <Grid container justify=\"center\" style={{ marginTop: '10px' }}>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                            style={{ textTransform: \"none\" }}\r\n                            onClick={handleLogin}\r\n                        >\r\n                            sign up\r\n                        </Button>\r\n                    </Grid>\r\n                </div>\r\n            </Paper>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(SignUp);","import Login from './Components/Login';\r\n\r\nexport default Login;","import React, { useState, useEffect } from 'react';\r\nimport trimStart from 'lodash/trimStart';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport { Paper, withStyles, Grid, TextField, Button, FormControlLabel, Checkbox } from '@material-ui/core';\r\nimport { Face, Fingerprint } from '@material-ui/icons';\r\nimport { Notify } from '../../../Util/NotificationProvider';\r\nimport SignUp from './SignUp';\r\nimport users from '../../../Store/data/users';\r\n\r\nconst styles = theme => ({\r\n    margin: {\r\n        margin: theme.spacing.unit * 2,\r\n    },\r\n    padding: {\r\n        padding: theme.spacing.unit\r\n    }\r\n});\r\n\r\nconst LoginTab = props => {\r\n    const { classes, setUserLogged } = props;\r\n    const [formData, setFormData] = useState({});\r\n    const [status, setStatus] = useState({});\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const handleChange = event => {\r\n        const { name } = event.target;\r\n        let value = trimStart(event.target.value);\r\n        setFormData(prevFormData => {\r\n            const newFormData = { ...prevFormData, [name]: value };\r\n            const error = validateError(newFormData);\r\n            setErrors(prevErrors => ({ ...prevErrors, [name]: error[name] }));\r\n            return newFormData;\r\n        });\r\n    }\r\n\r\n    const handleLogin = () => {\r\n        setFormData(prevFormData => {\r\n            const errors = validateError(prevFormData);\r\n            if (isEmpty(errors)) {\r\n                const isAuthorized = checkAuthorization(prevFormData);\r\n                if (isAuthorized) setUserLogged(true);\r\n                else Notify('User Not Found', 'error');\r\n            }\r\n            else setErrors(errors);\r\n\r\n            return prevFormData;\r\n        })\r\n    }\r\n\r\n    const validateError = ({ username, password }) => {\r\n        const errors = {};\r\n        if (!username) errors.username = 'Please specify Username';\r\n        if (!password) errors.password = 'Please specify Password';\r\n        return errors;\r\n    }\r\n\r\n    const checkAuthorization = ({ username, password }) => {\r\n        const user = users.find(user => user.username === username);\r\n        return user?.password === password;\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log('1000');\r\n    }, 1000);\r\n\r\n    return (\r\n        <>\r\n            <Grid container alignItems=\"center\" justify=\"center\" style={{ minHeight: '80vh' }} >\r\n                <Paper className={classes.padding}>\r\n                    <div className={classes.margin}>\r\n                        <Grid container spacing={4} justify=\"flex-end\">\r\n                            <Button\r\n                                color=\"secondary\"\r\n                                style={{ textTransform: \"none\" }}\r\n                                onClick={() => setStatus({ isSignUp: true })}\r\n                            >\r\n                                Sign up\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid container spacing={4} alignItems=\"flex-end\">\r\n                            <Grid item>\r\n                                <Face />\r\n                            </Grid>\r\n                            <Grid item md={true} sm={true} xs={true}>\r\n                                <TextField\r\n                                    name=\"username\"\r\n                                    label=\"Username\"\r\n                                    type=\"text\"\r\n                                    fullWidth\r\n                                    autoFocus\r\n                                    required\r\n                                    value={formData.username || \"\"}\r\n                                    onChange={handleChange}\r\n                                    error={!!errors.username}\r\n                                    helperText={errors.username}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={4} alignItems=\"flex-end\">\r\n                            <Grid item>\r\n                                <Fingerprint />\r\n                            </Grid>\r\n                            <Grid item md={true} sm={true} xs={true}>\r\n                                <TextField\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    fullWidth\r\n                                    required\r\n                                    value={formData.password || \"\"}\r\n                                    onChange={handleChange}\r\n                                    error={!!errors.password}\r\n                                    helperText={errors.password}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        {/* <Grid container alignItems=\"center\" justify=\"space-between\">\r\n                            <Grid item>\r\n                                <FormControlLabel control={\r\n                                    <Checkbox\r\n                                        color=\"primary\"\r\n                                    />\r\n                                } label=\"Remember me\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button disableFocusRipple disableRipple style={{ textTransform: \"none\" }} variant=\"text\" color=\"primary\">Forgot password ?</Button>\r\n                            </Grid>\r\n                        </Grid> */}\r\n                        <Grid container justify=\"center\" style={{ marginTop: '10px' }}>\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                color=\"primary\"\r\n                                style={{ textTransform: \"none\" }}\r\n                                onClick={handleLogin}\r\n                            >\r\n                                Login\r\n                        </Button>\r\n                        </Grid>\r\n                    </div>\r\n                </Paper>\r\n            </Grid>\r\n            {status.isSignUp && <SignUp open handleClose={() => setStatus({ isSignUp: false })} />}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(LoginTab);","const Styles = theme => ({\r\n    fullOuter: {\r\n        padding: 10,\r\n        boxSizing: 'border-box',\r\n        width: '100vw',\r\n        height: '100vh',\r\n        display: 'block',\r\n        // overflowY: 'scroll',\r\n        overflowX: 'hidden'\r\n    },\r\n    drawerViewBody: {\r\n        padding: 5,\r\n        marginTop: 5\r\n    },\r\n    question: {\r\n        color: 'blue',\r\n        top: 200\r\n    }\r\n});\r\n\r\nexport default Styles;","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport styles from '../../../Styles/Styles';\r\n\r\nconst Question = props => {\r\n    const ref = React.createRef();\r\n    const { classes, question } = props;\r\n    const { id } = question;\r\n    const handleDrag = (event, id) => {\r\n        event.dataTransfer.setData(\"id\", id);\r\n    }\r\n    // const [s, connectDrag] = useDrag({\r\n    //     item: { id, type: \"SIMPLE_COMPONENT\", created: \"10:06\" }\r\n    // });\r\n    // const [a, connectDrop] = useDrop({\r\n    //     accept: \"SIMPLE_COMPONENT\",\r\n    //     hover(item) {\r\n    //         console.log(\"Hovering item. id: \", item.id, \" created: \", item.created);\r\n    //         console.log(\"Hovered over item with id: \", id);\r\n    //     }\r\n    // });\r\n    // connectDrag(ref);\r\n    // connectDrop(ref);\r\n    return (\r\n        <div\r\n            key={id}\r\n            // ref={ref}\r\n            draggable\r\n            onDragStart={event => handleDrag(event, id)}\r\n        >\r\n\r\n            <Typography varient=\"h6\" component=\"p\" gutterBottom style={{ wordBreak: 'break-all' }} >\r\n                Q{id}. {question.que}\r\n            </Typography>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(Question);","// https://www.latestinterviewquestions.com/javascript-multiple-choice-questions-answers\r\nconst JavaScriptQuestions = [\r\n    {\r\n        id: 1,\r\n        que: \"JavaScript is ______ language\",\r\n        options: {\r\n            a: \"Scripting\",\r\n            b: \"Programming\",\r\n            c: \"Both a and b\",\r\n            d: \"Application\"\r\n        },\r\n        details: \"JavaScript is ______ language details\",\r\n        ans: 'a'\r\n    },\r\n    {\r\n        id: 2,\r\n        que: \"JavaScript is ______ Side scripting language\",\r\n        options: {\r\n            a: \"Server\",\r\n            b: \"Client\",\r\n            c: \"ISP\",\r\n            d: \"Browser\"\r\n        },\r\n        details: \"JavaScript is ______ Side scripting details\",\r\n        ans: 'd'\r\n    },\r\n    {\r\n        id: 3,\r\n        que: \"The behaviour of the document elements can be defined by\",\r\n        options: {\r\n            a: \"Using document object\",\r\n            b: \"Registering appropriate event handlers\",\r\n            c: \"Using element object\",\r\n            d: \"All of the mentioned\"\r\n        },\r\n        details: \"The behaviour of the document elements can be defined by details\",\r\n        ans: 'b'\r\n    },\r\n    {\r\n        id: 4,\r\n        que: \"The service(s) that enables networking through scripted HTTP requests is\",\r\n        options: {\r\n            a: \"XMLHttpResponse\",\r\n            b: \"XMLRequest\",\r\n            c: \"XMLHttpRequest\",\r\n            d: \"All of the mentioned\"\r\n        },\r\n        details: \"The service(s) that enables networking through scripted HTTP requests is details\",\r\n        ans: 'c'\r\n    },\r\n    {\r\n        id: 5,\r\n        que: \"The HTML5 specification includes\",\r\n        options: {\r\n            a: \"Data storage\",\r\n            b: \"Graphics APIs\",\r\n            c: \"Other APIs for web apps\",\r\n            d: \"All of the mentioned\"\r\n        },\r\n        details: \"The HTML5 specification includes details\",\r\n        ans: \"d\"\r\n    },\r\n\r\n];\r\n\r\nexport default JavaScriptQuestions;","import React, { useState } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport styles from '../../../Styles/Styles';\r\nimport Question from './Question';\r\nimport JavaScriptQuestions from '../../../Store/data/JavaScriptQuestions';\r\n\r\nconst Details = props => {\r\n    const { classes } = props;\r\n    const [droppedData, setDroppedData] = useState();\r\n    const handleDrop = event => {\r\n        const id = event.dataTransfer.getData(\"id\");\r\n        console.log({ id });\r\n        setDroppedData(JavaScriptQuestions.find(que => que.id === +id));\r\n    }\r\n    console.log({ droppedData });\r\n    return (\r\n        <div\r\n            onDragOver={event => event.preventDefault()}\r\n            onDrop={event => handleDrop(event)}\r\n        >\r\n            <Paper className={classes.drawerViewBody} style={{ height: 'calc(100vh - 130px)', overflow: \"auto\" }}>\r\n                {droppedData?.details}\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(Details);","import React, { useState, useEffect } from 'react';\r\nimport './timer.css';\r\n\r\nconst Timer = () => {\r\n    const [seconds, setSeconds] = useState(0);\r\n    const [isActive, setIsActive] = useState(false);\r\n\r\n    function toggle() {\r\n        setIsActive(!isActive);\r\n    }\r\n\r\n    function reset() {\r\n        setSeconds(0);\r\n        setIsActive(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let interval = null;\r\n        if (isActive) {\r\n            interval = setInterval(() => {\r\n                setSeconds(seconds => seconds + 1);\r\n            }, 1000);\r\n        } else if (!isActive && seconds !== 0) {\r\n            clearInterval(interval);\r\n        }\r\n        return () => clearInterval(interval);\r\n    }, [isActive, seconds]);\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <div className=\"time\">\r\n                {seconds}s\r\n            </div>\r\n            <div className=\"row\">\r\n                <button className={`button button-primary button-primary-${isActive ? 'active' : 'inactive'}`} onClick={toggle}>\r\n                    {isActive ? 'Pause' : 'Start'}\r\n                </button>\r\n                <button className=\"button\" onClick={reset}>\r\n                    Reset\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Timer;","import JavaScript from './JavaScript';\r\n\r\nexport default JavaScript;\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Question from '../Question';\r\nimport JavaScriptQuestions from '../../../../Store/data/JavaScriptQuestions';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport styles from '../../../../Styles/Styles';\r\nimport { Notify } from '../../../../Util/NotificationProvider';\r\nimport Details from '../Details';\r\nimport Timer from '../../../Timer/Timer';\r\nimport useFetch from \"react-fetch-hook\";\r\n\r\nconst JavaScript = props => {\r\n    const { classes, setUserLogged } = props;\r\n    const { isLoading, data } = useFetch(\"https://dummyapi.io/data/api/user\", { headers: { \"app-id\": \"yCS0JO9xJD5oTVBVrNue\" } });\r\n    const handleSubmit = () => {\r\n        Notify(\"Submitted Successfully\", \"success\")\r\n    }\r\n\r\n    if (!isLoading) console.log({ data });\r\n    return (\r\n        <>\r\n            <div className={classes.fullOuter}>\r\n                <Grid container direction='row' justify='center' alignItems='center' spacing={24} >\r\n                    <Grid item md={12} sm={12} xs={12}>\r\n                        <Paper className={classes.drawerViewBody}>\r\n                            <Grid item >\r\n\r\n                                kmlk\r\n                                <Timer />\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    style={{ textTransform: \"none\", float: \"right\", padding: 0 }}\r\n                                    onClick={handleSubmit}\r\n                                >\r\n                                    Submmit\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid>\r\n\r\n                                kkmm\r\n                                </Grid>\r\n                        </Paper>\r\n                    </Grid>\r\n                    {/* <Grid item md={8} sm={12} xs={12}>\r\n                        <Paper className={classes.drawerViewBody}>\r\n                            {JavaScriptQuestions.map((question, idx) => <Question question={{ id: idx + 1, ...question }} />)}\r\n                        </Paper>\r\n                        <Paper className={classes.drawerViewBody}>\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                color=\"primary\"\r\n                                style={{ textTransform: \"none\" }}\r\n                            >\r\n                                Submit\r\n                            </Button>\r\n                        </Paper>\r\n                    </Grid> */}\r\n                </Grid>\r\n                <Grid container direction='row' spacing={1} >\r\n                    <Grid item lg={9} md={9} sm={12} xs={12}>\r\n                        <Paper className={classes.drawerViewBody} style={{ height: 'calc(100vh - 93px)', overflow: \"auto\" }}>\r\n                            {JavaScriptQuestions.map(question => <Question question={question} />)}\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item lg={3} md={3} sm={12} xs={12}>\r\n                        {/* <div \r\n                            onDragOver={event => event.preventDefault()} \r\n                            onDrop={event=> handleDrop(event)}\r\n                        > */}\r\n                        <Details />\r\n                        {/* </div> */}\r\n                        <div> @Copyright devInc Ph: 9535139156 </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(JavaScript);","import React, { useState } from 'react';\r\n// import { Route } from 'react-router-dom';\r\nimport Login from './Main/Auth';\r\n// import SignUp from './Main/Auth/Components/SignUp';\r\nimport JavaScript from './Main/Questions/Components/JavaScript';\r\n\r\nconst Application = () => {\r\n    const [userLogged, setUserLogged] = useState(true);\r\n    console.log({ userLogged });\r\n    return (\r\n        <>\r\n            {!userLogged && <Login setUserLogged={setUserLogged} />}\r\n            {userLogged && <JavaScript setUserLogged={setUserLogged} />}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Application;","import React from 'react';\r\n// import { Route, Switch, BrowserRouter } from 'react-router-dom';\r\n// import logo from './logo.svg';\r\nimport './App.css';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport Theme from './Styles/Theme';\r\nimport NotificationProvider from './Util/NotificationProvider';\r\nimport Application from './Application';\r\n\r\nfunction App() {\r\n  return (\r\n    <MuiThemeProvider theme={Theme}>\r\n      <NotificationProvider>\r\n        <Application />\r\n      </NotificationProvider>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <DndProvider backend={HTML5Backend}>\n        <App />\n      </DndProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}