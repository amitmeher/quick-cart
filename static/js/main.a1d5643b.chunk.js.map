{"version":3,"sources":["Styles/Theme.js","Util/NotificationProvider/index.js","Styles/Styles.js","Components/Navbar/Navbar.js","Store/data/initialStateData.js","Store/reducers/product.js","Components/ProductList/ProductCard.js","Components/ProductList/ProductList.js","Components/WishList/WishCard.js","Components/WishList/WishList.js","Components/CartList/CartCard.js","Components/CartList/CartList.js","Application.js","App.js","serviceWorker.js","Store/reducers/index.js","Store/index.js","index.js"],"names":["Theme","createMuiTheme","question","primary","contsartText","emitter","EventEmitter","Snackbar","children","useSnackbar","enqueueSnackbar","closeSnackbar","on","message","variant","Notify","emit","NotificationProvider","anchorOrigin","horizontal","vertical","preventDuplicate","autoHideDuration","Styles","theme","fullOuter","padding","boxSizing","width","height","display","overflowX","backgroundColor","drawerViewBody","marginTop","color","top","withStyles","styles","props","classes","Grid","item","style","IconButton","size","textTransform","float","data","products","id","image","title","description","price","setWishlist","type","payLoad","addToCart","productReducers","state","action","map","product","wishlisted","carted","quantity","useStyles","makeStyles","root","media","content","ProductCard","dispatch","useDispatch","Card","className","draggable","onDragStart","event","dataTransfer","setData","CardMedia","CardContent","Typography","noWrap","CardActions","Button","onClick","aria-label","useSelector","console","log","Paper","elevation","overflow","container","spacing","margin","idx","lg","md","sm","xs","WishCard","wishlistedProducts","filter","onDragOver","preventDefault","onDrop","getData","find","handleDrop","direction","length","justify","alignItems","details","flexDirection","maxWidth","flex","cover","CartCard","disabled","cartedProducts","itemCount","reduce","accumulator","currentValue","totalPrice","App","Boolean","window","location","hostname","match","reducers","combineReducers","middleware","thunk","store","createStore","initialState","applyMiddleware","ReactDOM","render","StrictMode","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.a1d5643b.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst Theme = createMuiTheme({\r\n    question: {\r\n        primary: {\r\n            contsartText: '#ffffff'\r\n        }\r\n    }\r\n});\r\n\r\nexport default Theme;","import React from 'react';\r\nimport { SnackbarProvider, useSnackbar } from 'notistack';\r\nimport Button from '@material-ui/core/Button';\r\nimport EventEmitter from 'event-emitter';\r\n\r\nconst emitter = new EventEmitter();\r\n\r\nconst Snackbar = ({ children }) => {\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n    const action = key => (\r\n        <>\r\n            <Button onClick={() => { alert(`I belong to snackbar with key ${key}`); }}>\r\n                'Alert'\r\n            </Button>\r\n            <Button onClick={() => { closeSnackbar(key) }}>\r\n                'Dismiss'\r\n            </Button>\r\n        </>\r\n    );\r\n\r\n    emitter.on('notify', (message, variant) => {\r\n        enqueueSnackbar(message, {\r\n            variant,\r\n            // action\r\n        });\r\n    });\r\n\r\n    return <>{children}</>\r\n}\r\n\r\nexport const Notify = (message, variant) => {\r\n    emitter.emit('notify', message, variant);\r\n}\r\n\r\nconst NotificationProvider = ({ children }) =>\r\n    <SnackbarProvider\r\n        anchorOrigin={{ horizontal: \"right\", vertical: \"bottom\" }}\r\n        preventDuplicate={true}\r\n        autoHideDuration={1500}>\r\n        <Snackbar>{children}</Snackbar>\r\n    </SnackbarProvider>\r\n\r\nexport default NotificationProvider;\r\n\r\n","const Styles = theme => ({\r\n    fullOuter: {\r\n        padding: 10,\r\n        boxSizing: 'border-box',\r\n        width: 'auto',\r\n        height: 'auto',\r\n        display: 'block',\r\n        // overflowY: 'scroll',\r\n        overflowX: 'hidden',\r\n        backgroundColor: '#FFE1D4'\r\n    },\r\n    drawerViewBody: {\r\n        padding: 5,\r\n        marginTop: 5\r\n    },\r\n    question: {\r\n        color: 'blue',\r\n        top: 200\r\n    }\r\n});\r\n\r\nexport default Styles;","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport styles from '../../Styles/Styles';\r\nimport { Notify } from '../../Util/NotificationProvider';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\n\r\nconst Navbar = props => {\r\n    const { classes } = props;\r\n    const handleSubmit = () => {\r\n        Notify(\"Submitted Successfully\", \"success\")\r\n    }\r\n    return (\r\n        // <Paper className={classes.drawerViewBody} style={{ backgroundColor: '#575757' }} elevation={5}>\r\n        <Grid item style={{ backgroundColor: '#FF6666' }}>\r\n            <IconButton size=\"small\" style={{ textTransform: \"none\", padding: 10 }}>\r\n                <HomeIcon />\r\n            </IconButton>\r\n            <IconButton size=\"small\" style={{ textTransform: \"none\", float: \"right\", padding: 10 }}>\r\n                <AppsIcon />\r\n            </IconButton>\r\n        </Grid>\r\n        // </Paper>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(Navbar);","const data = {\r\n    products: [\r\n        {\r\n            id: 1,\r\n            image: 'https://assets.myntassets.com/h_720,q_90,w_540/v1/assets/images/1894413/2017/6/20/11497943671766-WROGN-Men-Grey-Melange-Self-Design-Round-Neck-T-shirt-881497943671356-1.jpg',\r\n            title: 'WROGN',\r\n            description: 'Men Grey Melange Self Design Round Neck T-shirt',\r\n            price: 2000\r\n        },\r\n        {\r\n            id: 2,\r\n            image: 'https://assets.myntassets.com/dpr_2,q_60,w_210,c_limit,fl_progressive/assets/images/7695791/2019/3/19/e8222172-d02d-4861-aa13-d719ac431b571552970654368-HRX-by-Hrithik-Roshan-Men-Navy-Blue-Solid-Training-T-shirt-1-1.jpg',\r\n            title: 'HRX',\r\n            description: 'Men Navy Blue Training T-shirt',\r\n            price: 1500\r\n        },\r\n        {\r\n            id: 3,\r\n            image: 'https://assets.myntassets.com/h_720,q_90,w_540/v1/assets/images/1072681/2020/1/20/9de2d7dc-e239-4327-b7d0-096c80ac3a121579503443912-Roadster-Men-Charcoal-Melange-Printed-Round-Neck-T-shirt-364-1.jpg',\r\n            title: 'Roadster',\r\n            description: 'Men Charcoal Melange Printed Round Neck T-shirt',\r\n            price: 1000\r\n        },\r\n        {\r\n            id: 4,\r\n            image: 'https://assets.myntassets.com/h_720,q_90,w_540/v1/assets/images/1965545/2020/2/26/34bfb3c3-3926-4287-aca6-ae638442ced11582701218981-Justice-League-Men-Black-Printed-Round-Neck-T-shirt-62515827-4.jpg',\r\n            title: 'Justice League',\r\n            description: 'Men Black Printed Round Neck T-shirt',\r\n            price: 3000\r\n        }\r\n    ]\r\n};\r\n\r\nexport default data;","\r\nimport { Notify } from '../../Util/NotificationProvider';\r\n\r\nexport const GET_PRODUCTS = 'GET_PRODUCTS';\r\nexport const SET_WISHLIST = 'SET_WISHLIST';\r\nexport const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\r\nexport const INCREASE_CART_QUANTITY = 'INCREASE_CART_QUANTITY';\r\nexport const DECREASE_CART_QUANTITY = 'DECREASE_CART_QUANTITY';\r\nexport const PLACE_ORDER = 'PLACE_ORDER';\r\n\r\nexport const setWishlist = id => ({ type: SET_WISHLIST, payLoad: id });\r\n\r\nexport const addToCart = id => ({ type: ADD_TO_CART, payLoad: id });\r\n\r\nexport const removeFromCart = id => ({ type: REMOVE_FROM_CART, payLoad: id });\r\n\r\nexport const increaseCartQuantity = id => ({ type: INCREASE_CART_QUANTITY, payLoad: id });\r\n\r\nexport const decreaseCartQuantity = id => ({ type: DECREASE_CART_QUANTITY, payLoad: id });\r\n\r\nexport const placeOrder = id => ({ type: PLACE_ORDER });\r\n\r\nconst productReducers = (state = [], action) => {\r\n    switch (action.type) {\r\n        case GET_PRODUCTS:\r\n            return state;\r\n        case SET_WISHLIST:\r\n            return state.map(\r\n                product => product.id === action.payLoad\r\n                    ? { ...product, wishlisted: !product.wishlisted }\r\n                    : product\r\n            );\r\n        case ADD_TO_CART:\r\n            return state.map(\r\n                product => product.id === action.payLoad\r\n                    ? { ...product, carted: true, quantity: 1 }\r\n                    : product\r\n            );\r\n        case REMOVE_FROM_CART:\r\n            return state.map(\r\n                product => product.id === action.payLoad\r\n                    ? { ...product, carted: false, quantity: 0 }\r\n                    : product\r\n            );\r\n        case INCREASE_CART_QUANTITY:\r\n            return state.map(\r\n                product => product.id === action.payLoad\r\n                    ? { ...product, quantity: product.quantity + 1 }\r\n                    : product\r\n            );\r\n        case DECREASE_CART_QUANTITY:\r\n            return state.map(\r\n                product => product.id === action.payLoad\r\n                    ? { ...product, quantity: product.quantity - 1 }\r\n                    : product\r\n            );\r\n        case PLACE_ORDER:\r\n            Notify(\"Order Placed Successfully\", \"success\");\r\n            return state.map(product => ({ ...product, carted: false }));\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default productReducers;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Favorite from '@material-ui/icons/Favorite';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setWishlist, addToCart } from '../../Store/reducers/product';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    // width: 300,\r\n  },\r\n  media: {\r\n    height: 300,\r\n  },\r\n  content: {\r\n    padding: 5,\r\n    height: 50\r\n  },\r\n  content: {\r\n    padding: 2\r\n  }\r\n});\r\n\r\nconst ProductCard = props => {\r\n  const { product } = props;\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const handleDrag = event => event.dataTransfer.setData('id', product.id);\r\n  return (\r\n    <Card className={classes.root} draggable onDragStart={handleDrag}>\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={product.image}\r\n      />\r\n      <CardContent className={classes.content}>\r\n        <Typography variant=\"subtitle2\" noWrap={true}>\r\n          {product.title}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" noWrap={true}>\r\n          {product.description}\r\n        </Typography>\r\n        <Typography variant=\"caption\" color=\"textSecondary\">\r\n          Price: ₹ {product.price}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions className={classes.content}>\r\n        <Button size=\"small\" onClick={!product.carted ? () => dispatch(addToCart(product.id)) : () => { }} style={{ color: '#FF6666' }} >\r\n          Add to cart\r\n        </Button>\r\n        <IconButton size=\"small\" aria-label=\"add to favorites\" onClick={() => dispatch(setWishlist(product.id))} color={product.wishlisted ? 'secondary' : ''}>\r\n          <Favorite />\r\n        </IconButton>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ProductCard;\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport JavaScriptQuestions from '../../Store/data/initialStateData';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport styles from '../../Styles/Styles';\r\nimport { Notify } from '../../Util/NotificationProvider';\r\nimport ProductCard from './ProductCard';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst ProductList = props => {\r\n    const { classes } = props;\r\n    const { products } = useSelector(state => state);\r\n    console.log({ products });\r\n    return (\r\n        <Paper className={classes.drawerViewBody} elevation={10} style={{ height: 'calc(100vh - 80px)', overflow: \"auto\" }} >\r\n            <Grid container spacing={4} style={{ width: 'auto', margin: 'auto' }}>\r\n                {products?.map(\r\n                    (question, idx) =>\r\n                        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n                            <ProductCard product={question} />\r\n                        </Grid>\r\n                )}\r\n            </Grid>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(ProductList);","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addToCart } from '../../Store/reducers/product';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 104,\r\n    },\r\n    media: {\r\n        height: 165,\r\n    },\r\n    content: {\r\n        padding: 1,\r\n        height: 50\r\n    }\r\n});\r\n\r\nconst WishCard = props => {\r\n    const { product } = props;\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardMedia\r\n                className={classes.media}\r\n                image={product.image}\r\n            />\r\n            <CardContent className={classes.content}>\r\n                <Typography variant=\"subtitle2\" color=\"textSecondary\" noWrap={true}>\r\n                    {product.title}\r\n                </Typography>\r\n                <Typography variant=\"caption\" color=\"textSecondary\">\r\n                    Price: ₹ {product.price}\r\n                </Typography>\r\n                <Button size=\"small\" onClick={!product.carted ? () => dispatch(addToCart(product.id)) : () => { }} style={{ color: '#FF6666' }} >\r\n                    Add to cart\r\n                </Button>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default WishCard;","import React, { useState } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport styles from '../../Styles/Styles';\r\nimport WishCard from './WishCard';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setWishlist } from '../../Store/reducers/product';\r\n\r\nconst WishList = props => {\r\n    const { classes } = props;\r\n    const { products } = useSelector(state => state);\r\n    const dispatch = useDispatch();\r\n    const wishlistedProducts = products?.filter(({ wishlisted }) => wishlisted);\r\n\r\n    const handleDrop = event => {\r\n        const id = event.dataTransfer.getData(\"id\");\r\n        const wishlisted = wishlistedProducts.find(product => product.id === +id);\r\n        if (!wishlisted) dispatch(setWishlist(+id));\r\n    }\r\n\r\n    return (\r\n        <div\r\n            onDragOver={event => event.preventDefault()}\r\n            onDrop={event => handleDrop(event)}\r\n        >\r\n            <Paper className={classes.drawerViewBody} elevation={10} style={{ height: 285, overflow: \"auto\" }}>\r\n                <Grid container direction='column'>\r\n                    <Grid style={{ height: 20, color: '#FF6666' }}>\r\n                        Wishlist {wishlistedProducts?.length ? `(${wishlistedProducts.length} Items)` : ''}\r\n                    </Grid>\r\n                    <Grid style={{ height: 250, overflow: \"auto\" }}>\r\n                        <Grid container justify='center' alignItems='center' spacing={1} style={{ width: 'auto', margin: 'auto' }}>\r\n                            {wishlistedProducts?.map(product =>\r\n                                <Grid item>\r\n                                    <WishCard product={product} />\r\n                                </Grid>\r\n                            )}\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(WishList);","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Add from '@material-ui/icons/Add';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport Favorite from '@material-ui/icons/Favorite';\r\nimport Delete from '@material-ui/icons/Delete';\r\nimport { useDispatch } from 'react-redux';\r\nimport { increaseCartQuantity, decreaseCartQuantity, setWishlist, removeFromCart } from '../../Store/reducers/product';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: 'flex'\r\n    },\r\n    details: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        maxWidth: 230\r\n    },\r\n    content: {\r\n        flex: '1 0 auto'\r\n    },\r\n    cover: {\r\n        height: 150,\r\n        width: 100\r\n    }\r\n});\r\n\r\nconst CartCard = (props) => {\r\n    const { product } = props;\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Card className={classes.root} draggable>\r\n            <CardMedia\r\n                className={classes.cover}\r\n                image={product.image}\r\n            />\r\n            <div className={classes.details}>\r\n                <CardContent className={classes.content}>\r\n                    <Typography variant=\"subtitle2\" noWrap={true}>\r\n                        {product.title}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" noWrap={true}>\r\n                        {product.description}\r\n                    </Typography>\r\n                    <Typography variant=\"caption\" color=\"textSecondary\">\r\n                        Price: ₹ {product.price * product.quantity}\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Typography variant=\"caption\" color=\"textSecondary\">\r\n                        Quantity:{product.quantity}\r\n                    </Typography>\r\n                    <IconButton size=\"small\" onClick={() => dispatch(decreaseCartQuantity(product.id))} disabled={product.quantity === 1}>\r\n                        <Remove />\r\n                    </IconButton>\r\n                    <IconButton size=\"small\" onClick={() => dispatch(increaseCartQuantity(product.id))}>\r\n                        <Add />\r\n                    </IconButton>\r\n                    <IconButton size=\"small\" onClick={() => dispatch(setWishlist(product.id))} color={product.wishlisted ? 'secondary' : ''}>\r\n                        <Favorite />\r\n                    </IconButton>\r\n                    <IconButton size=\"small\" onClick={() => dispatch(removeFromCart(product.id))}>\r\n                        <Delete />\r\n                    </IconButton>\r\n                </CardActions>\r\n            </div>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default CartCard;","import React, { useState } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport styles from '../../Styles/Styles';\r\nimport { Notify } from '../../Util/NotificationProvider';\r\nimport CartCard from './CartCard';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addToCart, placeOrder } from '../../Store/reducers/product';\r\n\r\nconst CartList = props => {\r\n    const { classes } = props;\r\n    const { products } = useSelector(state => state);\r\n    const dispatch = useDispatch();\r\n    const cartedProducts = products?.filter(({ carted }) => carted);\r\n    const itemCount = cartedProducts.reduce((accumulator, currentValue) => accumulator + currentValue.quantity, 0);\r\n    const totalPrice = cartedProducts.reduce((accumulator, currentValue) => accumulator + currentValue.quantity * currentValue.price, 0);\r\n\r\n    const handleDrop = event => {\r\n        const id = event.dataTransfer.getData(\"id\");\r\n        const carted = cartedProducts.find(product => product.id === +id);\r\n        if (!carted) dispatch(addToCart(+id));\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n\r\n        Notify(\"Order Placed Successfully\", \"success\")\r\n    }\r\n    return (\r\n        <div\r\n            onDragOver={event => event.preventDefault()}\r\n            onDrop={event => handleDrop(event)}\r\n        >\r\n            <Paper className={classes.drawerViewBody} elevation={10} style={{ height: 'calc(100vh - 380px)', overflow: \"auto\" }}>\r\n                <Grid container direction='column' >\r\n                    <Grid style={{ color: '#FF6666' }}>\r\n                        Cart {itemCount ? `(${itemCount} Items)` : ''}\r\n                    </Grid>\r\n                    <Grid style={{ height: 'calc(100vh - 438px)', overflow: \"auto\" }}>\r\n                        <Grid container justify='center' alignItems='center' spacing={1} style={{ width: 'auto', margin: 'auto' }}>\r\n                            {cartedProducts.map(product =>\r\n                                <Grid item>\r\n                                    <CartCard product={product} />\r\n                                </Grid>\r\n                            )}\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid>\r\n                        <span style={{ color: '#FF6666', padding: 20 }}>\r\n                            {totalPrice ? `Total: ₹ ${totalPrice}` : ''}\r\n                        </span>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            style={{ backgroundColor: '#FF6666', color: 'white', float: \"right\", padding: 5, marginTop: 2 }}\r\n                            disabled={!itemCount}\r\n                            onClick={() => dispatch(placeOrder())}\r\n                        >\r\n                            Place Order\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(CartList);","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport styles from './Styles/Styles';\r\nimport { Notify } from './Util/NotificationProvider';\r\nimport { Navbar, ProductList, WishList, CartList } from './Components';\r\n\r\nconst Application = props => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <>\r\n            <Grid container direction='row' justify='center' alignItems='center' >\r\n                <Grid item md={12} sm={12} xs={12}>\r\n                    <Navbar />\r\n                </Grid>\r\n            </Grid>\r\n            <div className={classes.fullOuter}>\r\n                <Grid container direction='row' spacing={1} >\r\n                    <Grid item lg={9} md={9} sm={12} xs={12}>\r\n                        <ProductList />\r\n                    </Grid>\r\n                    <Grid item lg={3} md={3} sm={12} xs={12}>\r\n                        <WishList />\r\n                        <CartList />\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(Application);","import React from 'react';\r\n// import { Route, Switch, BrowserRouter } from 'react-router-dom';\r\n// import logo from './logo.svg';\r\nimport './App.css';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport Theme from './Styles/Theme';\r\nimport NotificationProvider from './Util/NotificationProvider';\r\n// import { Provider } from 'react-redux';\r\n// import store from './Store';\r\nimport Application from './Application';\r\n\r\nfunction App() {\r\n  return (\r\n    <MuiThemeProvider theme={Theme}>\r\n      <NotificationProvider>\r\n        <Application />\r\n      </NotificationProvider>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\r\nimport productReducers from './product';\r\n\r\nconst reducers = combineReducers({\r\n    products: productReducers\r\n});\r\n\r\nexport default reducers;","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport initialState from './data/initialStateData';\r\nimport reducers from './reducers';\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(reducers, initialState, applyMiddleware(...middleware));\r\n\r\nexport default store;","import React from 'react';\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider as StoreProvider } from 'react-redux';\nimport store from './Store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <StoreProvider store={store}>\n        <App />\n      </StoreProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}